{"version":3,"sources":["./src/app/user/email-password/email-password.component.ts","./src/app/user/email-password/email-password.component.html","./src/app/user/google-signin.directive.ts","./src/app/user/login-page/login-page.component.ts","./src/app/user/login-page/login-page.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-email-login',\n  templateUrl: './email-password.component.html',\n  styleUrls: ['./email-password.component.scss']\n})\nexport class EmailLoginComponent implements OnInit {\n  form: FormGroup;\n\n  type: 'login' | 'signup' | 'reset' = 'signup';\n  loading = false;\n\n  serverMessage: string;\n\n  constructor(private afAuth: AngularFireAuth, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [Validators.minLength(6), Validators.required]\n      ],\n      passwordConfirm: ['', []]\n    });\n  }\n\n  changeType(val) {\n    this.type = val;\n  }\n\n  get isLogin() {\n    return this.type === 'login';\n  }\n\n  get isSignup() {\n    return this.type === 'signup';\n  }\n\n  get isPasswordReset() {\n    return this.type === 'reset';\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n\n  get passwordConfirm() {\n    return this.form.get('passwordConfirm');\n  }\n\n  get passwordDoesMatch() {\n    if (this.type !== 'signup') {\n      return true;\n    } else {\n      return this.password.value === this.passwordConfirm.value;\n    }\n  }\n\n  async onSubmit() {\n    this.loading = true;\n\n    const email = this.email.value;\n    const password = this.password.value;\n\n    try {\n      if (this.isLogin) {\n        await this.afAuth.signInWithEmailAndPassword(email, password);\n      }\n      if (this.isSignup) {\n        await this.afAuth.createUserWithEmailAndPassword(email, password);\n      }\n      if (this.isPasswordReset) {\n        await this.afAuth.sendPasswordResetEmail(email);\n        this.serverMessage = 'Check your email';\n      }\n    } catch (err) {\n      this.serverMessage = err;\n    }\n\n    this.loading = false;\n  }\n}","<mat-card>\n    <div *ngIf=\"isSignup\">\n      <h3>Create Account</h3>\n  \n      <button mat-stroked-button (click)=\"changeType('login')\">\n        Returning user?\n      </button>\n    </div>\n  \n    <div *ngIf=\"isLogin\">\n      <h3>Sign In</h3>\n      <button size=\"small\" mat-stroked-button (click)=\"changeType('signup')\">\n        New user?\n      </button>\n    </div>\n  \n    <div *ngIf=\"isPasswordReset\">\n      <h3>Reset Password</h3>\n      <button size=\"small\" mat-button (click)=\"changeType('login')\">Back</button>\n    </div>\n  \n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field [color]=\"email.valid && 'accent'\">\n        <input\n          matInput\n          formControlName=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          autocomplete=\"off\"\n        />\n  \n        <mat-error *ngIf=\"email.invalid && email.dirty\">\n          You must enter a valid email address\n        </mat-error>\n      </mat-form-field>\n  \n      <mat-form-field [color]=\"email.valid && 'accent'\" *ngIf=\"!isPasswordReset\">\n        <input\n          matInput\n          formControlName=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          autocomplete=\"off\"\n        />\n  \n        <mat-error *ngIf=\"password.invalid && password.dirty\">\n          Password must be at least 6 characters long\n        </mat-error>\n      </mat-form-field>\n  \n      <mat-form-field\n        [color]=\"passwordDoesMatch ? 'accent' : 'warn'\"\n        *ngIf=\"isSignup\"\n      >\n        <input\n          matInput\n          formControlName=\"passwordConfirm\"\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          autocomplete=\"off\"\n        />\n  \n        <mat-error *ngIf=\"passwordConfirm.dirty && !passwordDoesMatch\">\n          Password does not match\n        </mat-error>\n      </mat-form-field>\n  \n      <mat-error ngClass=\"server-error\">{{ serverMessage }}</mat-error>\n  \n      <button\n        *ngIf=\"isPasswordReset\"\n        mat-stroked-button\n        type=\"submit\"\n        [disabled]=\"loading\"\n      >\n        Send Reset Email\n      </button>\n  \n      <button\n        *ngIf=\"!isPasswordReset\"\n        mat-raised-button\n        color=\"accent\"\n        type=\"submit\"\n        [disabled]=\"form.invalid || !passwordDoesMatch || loading\"\n      >\n        Submit\n      </button>\n    </form>\n  \n    <button\n      mat-button\n      *ngIf=\"isLogin && !isPasswordReset\"\n      (click)=\"changeType('reset')\"\n    >\n      Forgot password?\n    </button>\n  </mat-card>","import { Directive, HostListener } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\n\n@Directive({\n  selector: '[appGoogleSignin]'\n})\nexport class GoogleSigninDirective {\n  constructor(private auth: AngularFireAuth) { }\n\n  @HostListener('click')\n  onclick() {\n    this.auth.signInWithPopup(new auth.GoogleAuthProvider());\n  }\n}","import { Component } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent {\n  constructor(public auth: AngularFireAuth) { }\n}","<div *ngIf=\"!(auth.authState | async)\">\n  <h1>Login</h1>\n\n  <button mat-raised-button appGoogleSignin>\n    <img ngClass=\"googleLogo\" src=\"/assets/google-logo.svg\" /> Login with Google\n  </button>\n\n  <div ngClass=\"form-box\">\n    <app-email-login></app-email-login>\n  </div>\n</div>\n\n<div *ngIf=\"auth.authState | async as user\" ngClass=\"logout\">\n  <p>\n    Logged in as <strong>{{ user.email }}</strong>\n  </p>\n\n  <button mat-stroked-button (click)=\"auth.signOut()\">Logout</button>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginPageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { LoginPageComponent } from './login-page/login-page.component';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { GoogleSigninDirective } from './google-signin.directive';\nimport { EmailLoginComponent } from './email-password/email-password.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LoginPageComponent, GoogleSigninDirective, EmailLoginComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}